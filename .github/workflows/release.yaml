name: release

on:
  release:
    types: [ created ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.meta.outputs.date }}
    steps:
      - name: Prepare release meta
        id: meta
        run: |
          echo "::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

  release-bin:
    runs-on: ubuntu-latest
    needs:
      - meta
    permissions:
      contents: write

    strategy:
      matrix:
        cmd: [ playerpath, importer ]
        goos: [ windows, linux ]
        goarch: [ amd64 ]

    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1.52
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.23.2
          project_path: cmd/${{ matrix.cmd }}
          binary_name: ${{ matrix.cmd }}
          ldflags: "-s -w -X 'main.buildTime=${{ needs.meta.outputs.date }}' -X 'main.buildCommit=${{ github.sha }}' -X 'main.buildVersion=${{ github.ref_name }}'"
          sha256sum: true
          asset_name: ${{ matrix.cmd }}-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}

  release-image:
    runs-on: ubuntu-latest
    needs:
      - meta
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            build_commit_sha=${{ github.sha }},
            build_version=${{ github.ref_name }},
            build_time=${{ needs.meta.outputs.date }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
